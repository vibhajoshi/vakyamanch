name: Vakyamanch GKE Deployment

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: vakyamanch
  K8S_NAMESPACE: vakyamanch-prod
  GKE_CLUSTER: vakyamanch-gke
  GKE_ZONE: us-central1-a

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  # REPLACE THE EXISTING 'deploy' JOB WITH THIS ENHANCED VERSION
  deploy-to-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Debug: List files to verify manifests exist
      - name: Verify Kubernetes files
        run: |
          ls -la kubernetes/
          cat kubernetes/*.yaml || true

      # GCP Auth with debugging
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        id: auth

      - name: Debug GCP Auth
        run: |
          echo "Project: ${{ steps.auth.outputs.project_id }}"
          gcloud auth list

      # GKE Setup with verbose output
      - name: Configure GKE
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
        id: gke

      - name: Debug Cluster Access
        run: |
          kubectl config current-context
          kubectl cluster-info
          kubectl get nodes

      # Deployment with validation
      - name: Deploy to GKE
        run: |
          set -x  # Enable debug mode
          
          # Create namespace if not exists
          kubectl create namespace ${{ env.K8S_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
          
          # Validate manifests
          kubectl apply -f kubernetes/ --dry-run=server -n ${{ env.K8S_NAMESPACE }}
          
          # Apply for real
          kubectl apply -f kubernetes/ -n ${{ env.K8S_NAMESPACE }}
          
          # Verify
          kubectl get all -n ${{ env.K8S_NAMESPACE }}
          kubectl rollout status deployment/vakyamanch -n ${{ env.K8S_NAMESPACE }} --timeout=300s